/*

* To change this license header, choose License Headers in Project Properties.

* To change this template file, choose Tools | Templates

* and open the template in the editor.

*/

package checkerboard;

 

import javafx.application.Application;

import javafx.fxml.FXMLLoader;

import javafx.scene.Parent;

import javafx.scene.Scene;

import javafx.scene.layout.AnchorPane;

import javafx.scene.paint.Color;

import javafx.scene.shape.Rectangle;

import javafx.stage.Stage;

 

/**

*

* @author Fan Gao

*/

//public class Checkerboard extends Application {

    public class Checkerboard{

    private int numRows;

    private int numCols;

    private double boardWidth;
    

    private double boardHeight;

    private Color lightColor=Color.RED;

    private Color darkColor=Color.BLACK;
    private AnchorPane build_ap=new AnchorPane();
    

   

    public Checkerboard(int numRows, int numCols, double boardWidth,double boardHeight){

        this.numRows=numRows;

        this.numCols=numCols;

        this.boardWidth=boardWidth;

        this.boardHeight=boardHeight;

    }

   

    public Checkerboard(int numRows, int numCols, double boardWidth,double boardHeight, Color lightColor, Color darkColor){

        this.numRows=numRows;

        this.numCols=numCols;

        this.boardWidth=boardWidth;

        this.boardHeight=boardHeight;

        this.lightColor=lightColor;

        this.darkColor=darkColor;

    }

   

    public AnchorPane build(){

        //builds the board UI and returns an AnchorPane as the root object.

        

        double rectWidth=Math.ceil(boardWidth/numCols);

        double rectHeight=Math.ceil(boardHeight/numRows);

        //int check=0;

        for(int row=0;row<numRows;row++){

            for(int col=0;col<numCols;col++){

                if((row+col)%2==0){

                    //Color c=Color.RED;

                    Rectangle rect = new Rectangle(rectWidth, rectHeight, lightColor);

                    rect.setLayoutX(rectWidth*row);

                    rect.setLayoutY(rectHeight*col);

                    build_ap.getChildren().add(rect);

                }else{

                    //Color c=Color.BLACK;

                    Rectangle rect = new Rectangle(rectWidth, rectHeight, darkColor);

                    rect.setLayoutX(rectWidth*row);

                    rect.setLayoutY(rectHeight*col);

                    build_ap.getChildren().add(rect);

                }

            }

        }

       

        return build_ap;

    }

   

    public AnchorPane getBoard(){

        //returns the AnchorPane generated by build() or null if one hasnâ€™t been built yet.
        if(build_ap!=null){
            return build_ap;
        }
       

        return null;

    }

   

    public int getNumRows(){

        return this.numRows;

    }

   

    public int getNumCols(){

        return this.numCols;

    }

   

    public double getWidth(){

        return this.boardWidth;

    }

   

    public double getHeight(){

        return this.boardHeight;

    }

   

    public Color getLightColor(){

        return this.lightColor;

    }

   

    public Color getDarkColor(){

        return this.darkColor;

    }

 

}